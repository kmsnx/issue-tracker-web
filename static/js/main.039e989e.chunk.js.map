{"version":3,"sources":["serviceWorker.js","constants/RequestStatuses.js","Board/BoardComponents/Board.jsx","Board/BoardComponents/BoardColumn.jsx","Board/BoardComponents/BoardItemButton.jsx","Board/BoardComponents/BoardItem.jsx","constants/ActionTypes.js","utils/requestDispatch.js","utils/request.js","api/issuesApi.js","IssueForm/issueFormActions.js","common/Loader.jsx","Board/BoardContainer.jsx","constants/IssuesStates.js","Board/boardActions.js","IssueForm/IssueFormComponents/TextInput.jsx","IssueForm/IssueForm.jsx","IssueForm/IssueFormContainer.jsx","Main/Main.jsx","Board/boardReducer.js","IssueForm/issueFormReducer.js","store.js","index.js"],"names":["Boolean","window","location","hostname","match","PENDING","SUCCESS","ERROR","memo","children","className","BoardColumn","title","style","background","defaultProps","icon","onClick","href","BoardItem","item","onEdit","onDelete","prevState","nextState","disabled","description","ADD_ISSUE","UPDATE_ISSUE","actionType","func","param","dispatch","a","type","payload","data","console","error","url","method","body","options","headers","fetch","JSON","stringify","res","ok","json","text","API_BASE_URL","HEADERS","createIssue","issue","request","getIssues","updateIssue","_id","deleteIssue","setIssueInForm","ActionTypes","SET_ISSUE_FORM_ELEMENT","toggleFormIsOpen","TOGGLE_ISSUE_FORM","Loader","isLoading","height","display","flexDirection","justifyContent","margin","loop","autoplay","animationData","BoardContainer","issues","getIssuesFromApi","requestStatus","requestError","handleIssueEdit","handleIssueDelete","handleStateChange","useEffect","boardCols","forEach","state","push","RequestStatuses","Object","entries","map","stateName","items","key","bind","message","mapDispatchToProps","requestDispatch","GET_ISSUES","DELETE_ISSUE","incValue","states","newIdx","findIndex","i","length","newIssue","connect","boardState","TextInput","onChange","value","placeholder","target","IssueForm","handleIssueElementChange","handleSubmit","getState","issueFormState","SUMBIT_ISSUE_FORM","IssueFormContainer","isOpen","toggleSibebarOpen","sidebar","open","onSetOpen","styles","Main","position","zIndex","initialState","isValid","boardInitialState","issueFormInitialState","createStore","combineReducers","filter","concat","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.039e989e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const PENDING = 'pending';\nexport const SUCCESS = 'success';\nexport const ERROR = 'ERROR';\n","import React, { memo } from 'react';\nimport { node } from 'prop-types';\n\nconst Board = ({ children }) => (\n  <div className=\"container-fluid p-4\">\n    <div className=\"row justify-content-between\">\n      {children}\n    </div>\n  </div>\n);\n\nBoard.propTypes = {\n  children: node.isRequired,\n};\n\nexport default memo(Board);\n","import React, { memo } from 'react';\nimport { string, node } from 'prop-types';\n\nconst BoardColumn = ({ title, children }) => (\n  <div\n    className=\"col mx-2 text-center rounded shadow-sm\"\n    style={{ background: 'rgba(255,255,255,0.8)' }}\n  >\n    <h2 className=\"text-uppercase font-weight-light\">{title}</h2>\n    {children}\n  </div>\n);\n\nBoardColumn.defaultProps = {\n  title: 'Column',\n  children: null,\n};\n\nBoardColumn.propTypes = {\n  title: string,\n  children: node,\n};\n\nexport default memo(BoardColumn);\n","import React, { memo } from 'react';\nimport { string, func } from 'prop-types';\n\nconst BoardItemButton = ({ icon, onClick }) => (\n  <a\n    href=\"#\"\n    className=\"text-dark\"\n    onClick={onClick}\n  >\n    <i className=\"material-icons\">\n      {icon}\n    </i>\n  </a>\n);\n\nBoardItemButton.propTypes = {\n  icon: string.isRequired,\n  onClick: func.isRequired,\n};\n\nexport default memo(BoardItemButton);\n","import React, { memo } from 'react';\nimport {\n  shape, string, func, bool,\n} from 'prop-types';\nimport BoardItemButton from './BoardItemButton';\n\nconst BoardItem = ({\n  item,\n  onEdit,\n  onDelete,\n  prevState,\n  nextState,\n  disabled,\n}) => (\n  <div\n    className=\"row justify-content-center shadow m-4 p-2 rounded bg-white\"\n  >\n    <div className=\"col-12 text-left\">\n      <h4>{item.title}</h4>\n      <p>{item.description}</p>\n    </div>\n    {!disabled && (\n    <div className=\"col-12 text-right\">\n      <BoardItemButton\n        icon=\"edit\"\n        onClick={onEdit}\n      />\n      <BoardItemButton\n        icon=\"delete\"\n        onClick={onDelete}\n      />\n      <BoardItemButton\n        icon=\"chevron_left\"\n        onClick={prevState}\n      />\n      <BoardItemButton\n        icon=\"chevron_right\"\n        onClick={nextState}\n      />\n    </div>\n    )}\n  </div>\n);\n\nBoardItem.defaultProps = {\n  disabled: false,\n};\n\nBoardItem.propTypes = {\n  item: shape({\n    title: string.isRequired,\n    description: string,\n    state: string.isRequired,\n  }).isRequired,\n  onEdit: func.isRequired,\n  onDelete: func.isRequired,\n  nextState: func.isRequired,\n  prevState: func.isRequired,\n  disabled: bool,\n};\n\nexport default memo(BoardItem);\n","export const _SUCCESS_SUFIX = '_SUCCESS';\nexport const _ERROR_SUFIX = '_ERROR';\n\n\n// board\nexport default {\n  ADD_ISSUE: 'ADD_ISSUE',\n\n  UPDATE_ISSUE: 'UPDATE_ISSUE',\n  [`UPDATE_ISSUE${_SUCCESS_SUFIX}`]: `UPDATE_ISSUE${_SUCCESS_SUFIX}`,\n  [`UPDATE_ISSUE${_ERROR_SUFIX}`]: `UPDATE_ISSUE${_ERROR_SUFIX}`,\n\n  DELETE_ISSUE: 'DELETE_ISSUE',\n  [`DELETE_ISSUE${_SUCCESS_SUFIX}`]: `DELETE_ISSUE${_SUCCESS_SUFIX}`,\n  [`DELETE_ISSUE${_ERROR_SUFIX}`]: `DELETE_ISSUE${_ERROR_SUFIX}`,\n\n  GET_ISSUES: 'GET_ISSUES',\n  [`GET_ISSUES${_SUCCESS_SUFIX}`]: `GET_ISSUES${_SUCCESS_SUFIX}`,\n  [`GET_ISSUES${_ERROR_SUFIX}`]: `GET_ISSUES${_ERROR_SUFIX}`,\n\n  SET_ISSUE_FORM_ELEMENT: 'SET_FORM_ELEMENT',\n  SUMBIT_ISSUE_FORM: 'SUMBIT_ISSUE_FORM',\n  [`SUMBIT_ISSUE_FORM${_SUCCESS_SUFIX}`]: `SUMBIT_ISSUE_FORM${_SUCCESS_SUFIX}`,\n  [`SUMBIT_ISSUE_FORM${_ERROR_SUFIX}`]: `SUMBIT_ISSUE_FORM${_ERROR_SUFIX}`,\n  TOGGLE_ISSUE_FORM: 'TOGGLE_ISSUE_FORM',\n\n};\n","import { _SUCCESS_SUFIX, _ERROR_SUFIX } from '../constants/ActionTypes';\n\nexport default (actionType, func, param = null) => async (dispatch) => {\n  try {\n    dispatch({ type: actionType, payload: param });\n    const data = await (param ? func(param) : func());\n    dispatch({\n      type: `${actionType}${_SUCCESS_SUFIX}`,\n      payload: data,\n    });\n    return data;\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n    dispatch({\n      type: `${actionType}${_ERROR_SUFIX}`,\n      payload: error,\n    });\n    return null;\n  }\n};\n","export default async (\n  url,\n  method = 'GET',\n  body = {},\n  options = {},\n  headers = {},\n) => {\n  const res = await fetch(\n    url,\n    {\n      ...options,\n      headers: {\n        ...headers,\n      },\n      method,\n      body: method === 'GET' || method === 'HEAD' ? null : JSON.stringify(body),\n    },\n  );\n\n  return res.ok ? res.json() : res.text();\n};\n","import request from '../utils/request';\n\nexport const API_BASE_URL = 'https://kmsnx-issue-tracker-api.herokuapp.com';\nexport const ISSUES_ENDPOINT = '/issues';\nexport const HEADERS = {\n  'Content-Type': 'application/json',\n};\n\nexport const createIssue = (issue) => request(\n  `${API_BASE_URL}${ISSUES_ENDPOINT}`,\n  'POST',\n  issue,\n  null,\n  HEADERS,\n);\n\nexport const getIssues = () => request(\n  `${API_BASE_URL}${ISSUES_ENDPOINT}`,\n);\n\nexport const updateIssue = (issue) => request(\n  `${API_BASE_URL}${ISSUES_ENDPOINT}/${issue._id}`,\n  'PUT',\n  issue,\n  null,\n  HEADERS,\n);\n\nexport const deleteIssue = (issue) => request(\n  `${API_BASE_URL}${ISSUES_ENDPOINT}/${issue._id}`,\n  'DELETE',\n);\n","import ActionTypes from '../constants/ActionTypes';\nimport requestDispatch from '../utils/requestDispatch';\nimport { createIssue, updateIssue } from '../api/issuesApi';\n\nexport const setIssueInForm = (issue) => ({\n  type: ActionTypes.SET_ISSUE_FORM_ELEMENT,\n  payload: issue,\n});\n\nexport const toggleFormIsOpen = () => (dispatch) => {\n  dispatch({ type: ActionTypes.TOGGLE_ISSUE_FORM });\n  dispatch(setIssueInForm({ title: '', description: '' }));\n};\n\nexport const setIssueFormElement = (key, value) => (dispatch) => {\n  dispatch({\n    type: ActionTypes.SET_ISSUE_FORM_ELEMENT,\n    payload: { [key]: value },\n  });\n};\n\nexport const submitIssueForm = () => async (dispatch, getState) => {\n  const { issue } = getState().issueFormState;\n  const func = issue._id ? updateIssue : createIssue;\n  const newIssue = await dispatch(requestDispatch(ActionTypes.SUMBIT_ISSUE_FORM, func, issue));\n  dispatch({ type: ActionTypes.ADD_ISSUE, payload: { ...newIssue } });\n  dispatch(toggleFormIsOpen());\n};\n","import React, { memo } from 'react';\nimport { bool } from 'prop-types';\nimport Lottie from 'react-lottie';\nimport animationData from '../animations/loading.json';\n\nconst Loader = ({ isLoading }) => (\n  <div>\n    {isLoading && (\n      <div style={{\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        margin: 'auto',\n        background: 'rgba(255,255,255,0.8)',\n      }}\n      >\n        <Lottie\n          options={{ loop: true, autoplay: true, animationData }}\n          height=\"100px\"\n        />\n      </div>\n    )}\n  </div>\n);\n\nLoader.defaultProps = {\n  isLoading: false,\n};\n\nLoader.propTypes = {\n  isLoading: bool,\n};\n\nexport default memo(Loader);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  arrayOf, shape, string, func,\n} from 'prop-types';\nimport Issue from '../models/issue';\nimport * as RequestStatuses from '../constants/RequestStatuses';\nimport * as IssuesStates from '../constants/IssuesStates';\nimport Board from './BoardComponents/Board';\nimport BoardColumn from './BoardComponents/BoardColumn';\nimport BoardItem from './BoardComponents/BoardItem';\nimport * as actions from './boardActions';\nimport Loader from '../common/Loader';\n\nexport const BoardContainer = ({\n  issues,\n  getIssuesFromApi,\n  requestStatus,\n  requestError,\n  handleIssueEdit,\n  handleIssueDelete,\n  handleStateChange,\n}) => {\n  useEffect(() => {\n    getIssuesFromApi();\n  }, []);\n\n  const boardCols = {\n    [IssuesStates.PENDING]: [],\n    [IssuesStates.OPEN]: [],\n    [IssuesStates.CLOSED]: [],\n  };\n\n  issues.forEach((issue) => {\n    boardCols[issue.state].push(issue);\n  });\n\n  return (\n    <div className=\"container-fluid\">\n      <Loader isLoading={requestStatus === RequestStatuses.PENDING} />\n      <Board>\n        {Object.entries(boardCols).map(([stateName, items]) => (\n          <BoardColumn title={stateName} key={stateName}>\n            {items.map((issue) => (\n              <BoardItem\n                item={issue}\n                key={issue._id}\n                disabled={stateName === IssuesStates.CLOSED}\n                onEdit={handleIssueEdit.bind(this, issue)}\n                onDelete={handleIssueDelete.bind(this, issue)}\n                nextState={handleStateChange.bind(\n                  this, issue, 1,\n                )}\n                prevState={handleStateChange.bind(\n                  this, issue, -1,\n                )}\n              />\n            ))}\n          </BoardColumn>\n        ))}\n      </Board>\n      {requestError && (\n      <div className=\"row\">\n        <h2 className=\"text-danger\">{requestError.message}</h2>\n      </div>\n      )}\n    </div>\n  );\n};\n\nBoardContainer.defaultProps = {\n  issues: [],\n  requestStatus: RequestStatuses.SUCCESS,\n  requestError: null,\n};\n\nBoardContainer.propTypes = {\n  issues: arrayOf(shape(Issue)),\n  requestStatus: string,\n  getIssuesFromApi: func.isRequired,\n  handleIssueEdit: func.isRequired,\n  handleIssueDelete: func.isRequired,\n  handleStateChange: func.isRequired,\n  requestError: shape({\n    message: string,\n  }),\n};\n\nconst mapStateToProps = ({ boardState }) => boardState;\n\nconst mapDispatchToProps = {\n  getIssuesFromApi: actions.getIssuesFromApi,\n  handleIssueEdit: actions.handleIssueEdit,\n  handleIssueDelete: actions.handleIssueDelete,\n  handleStateChange: actions.handleStateChange,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardContainer);\n","export const PENDING = 'pending';\nexport const OPEN = 'open';\nexport const CLOSED = 'closed';\n","import ActionTypes from '../constants/ActionTypes';\nimport requestDispatch from '../utils/requestDispatch';\nimport { getIssues, deleteIssue, updateIssue } from '../api/issuesApi';\nimport {\n  toggleFormIsOpen,\n  setIssueInForm,\n} from '../IssueForm/issueFormActions';\nimport * as IssuesStates from '../constants/IssuesStates';\n\nexport const getIssuesFromApi = () => requestDispatch(\n  ActionTypes.GET_ISSUES,\n  getIssues,\n);\n\nexport const handleIssueEdit = (issue) => (dispatch) => {\n  dispatch(toggleFormIsOpen());\n  dispatch(setIssueInForm(issue));\n};\n\nexport const handleIssueDelete = (issue) => requestDispatch(\n  ActionTypes.DELETE_ISSUE,\n  deleteIssue,\n  issue,\n);\n\nexport const handleStateChange = (issue, incValue = 1) => (dispatch) => {\n  const states = [IssuesStates.PENDING, IssuesStates.OPEN, IssuesStates.CLOSED];\n  const currentIdx = states.findIndex((i) => i === issue.state);\n  const newIdx = currentIdx + incValue;\n\n  if (newIdx >= 0 && newIdx < states.length) {\n    const newIssue = {\n      ...issue,\n      state: states[newIdx],\n    };\n    dispatch(requestDispatch(ActionTypes.UPDATE_ISSUE, updateIssue, newIssue));\n  }\n};\n","import React, { memo } from 'react';\nimport { func, string } from 'prop-types';\n\nconst TextInput = ({\n  onChange, value, placeholder, title,\n}) => (\n  <div className=\"container-fluid my-4\">\n    {title && (\n      <div className=\"row text-left\">\n        <h6 className=\"text-uppercase font-weight-light\">{title}</h6>\n      </div>\n    )}\n    <div className=\"row justify-content-center\">\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        placeholder={placeholder}\n        value={value}\n        onChange={({ target }) => onChange(target.value)}\n      />\n    </div>\n  </div>\n);\n\nTextInput.defaultProps = {\n  value: '',\n  placeholder: '',\n  title: '',\n};\n\nTextInput.propTypes = {\n  onChange: func.isRequired,\n  value: string,\n  placeholder: string,\n  title: string,\n};\n\nexport default memo(TextInput);\n","import React from 'react';\nimport {\n  shape, string, func,\n} from 'prop-types';\nimport { connect } from 'react-redux';\nimport { PENDING, SUCCESS } from '../constants/RequestStatuses';\nimport TextInput from './IssueFormComponents/TextInput';\nimport { setIssueFormElement, submitIssueForm } from './issueFormActions';\nimport Loader from '../common/Loader';\n\nexport const IssueForm = ({\n  issue: { title, description },\n  handleIssueElementChange,\n  handleSubmit,\n  requestStatus,\n  requestError,\n}) => (\n  <div className=\"container-fluid\">\n    <Loader isLoading={requestStatus === PENDING} />\n    <TextInput\n      title=\"Title\"\n      value={title}\n      onChange={handleIssueElementChange.bind(this, 'title')}\n    />\n    <TextInput\n      title=\"Description\"\n      value={description}\n      onChange={handleIssueElementChange.bind(this, 'description')}\n    />\n    {requestError && (\n    <div className=\"row text-danger\">\n      <small>\n        {requestError.message}\n      </small>\n    </div>\n    )}\n    <button\n      type=\"button\"\n      className=\"btn btn-light shadow rounded-circle d-flex justify-content-center align-content-between p-2 mx-auto\"\n      onClick={handleSubmit}\n    >\n      <i className=\"material-icons\">save</i>\n    </button>\n  </div>\n);\n\nIssueForm.defaultProps = {\n  issue: {\n    title: '',\n    description: '',\n  },\n  requestStatus: SUCCESS,\n  requestError: null,\n};\n\nIssueForm.propTypes = {\n  issue: shape({\n    title: string,\n    description: string,\n  }),\n  requestStatus: string,\n  requestError: shape({\n    message: string,\n  }),\n  handleIssueElementChange: func.isRequired,\n  handleSubmit: func.isRequired,\n};\n\nconst mapStateToProps = ({\n  issueFormState: { issue, requestStatus, requestError },\n}) => ({\n  issue,\n  requestStatus,\n  requestError,\n});\n\nconst mapDispatchToProps = {\n  handleIssueElementChange: setIssueFormElement,\n  handleSubmit: submitIssueForm,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueForm);\n","import React from 'react';\nimport Sidebar from 'react-sidebar';\nimport { bool, func, node } from 'prop-types';\nimport { connect } from 'react-redux';\nimport IssueForm from './IssueForm';\nimport { toggleFormIsOpen } from './issueFormActions';\n\nexport const IssueFormContainer = ({ isOpen, toggleSibebarOpen, children }) => (\n  <Sidebar\n    sidebar={<IssueForm />}\n    open={isOpen}\n    onSetOpen={toggleSibebarOpen}\n    styles={{ sidebar: { background: 'white' } }}\n  >\n    {children}\n    <div className=\"row fixed-bottom justify-content-end p-5\">\n      <button\n        type=\"button\"\n        onClick={toggleSibebarOpen}\n        className=\"btn btn-light shadow-lg rounded-circle d-flex justify-content-center align-content-between p-2\"\n      >\n        <i className=\"material-icons\">add</i>\n      </button>\n    </div>\n  </Sidebar>\n);\n\nIssueFormContainer.defaultProps = {\n  isOpen: false,\n  children: null,\n};\n\nIssueFormContainer.propTypes = {\n  isOpen: bool,\n  toggleSibebarOpen: func.isRequired,\n  children: node,\n};\n\nconst mapStateToProps = ({ issueFormState: { isOpen } }) => ({\n  isOpen,\n});\n\nconst mapDispatchToProps = {\n  toggleSibebarOpen: toggleFormIsOpen,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueFormContainer);\n","import React from 'react';\nimport Lottie from 'react-lottie';\nimport BoardContainer from '../Board/BoardContainer';\nimport animationData from '../animations/working.json';\nimport IssueFormContainer from '../IssueForm/IssueFormContainer';\n\nconst Main = () => (\n  <div className=\"container-fluid\" style={{ height: '100vh' }}>\n    <Lottie\n      options={{\n        loop: true,\n        autoplay: true,\n        animationData,\n      }}\n      height=\"100vh\"\n      style={{ position: 'fixed', zIndex: -1 }}\n    />\n    <div className=\"row\">\n      <IssueFormContainer>\n        <BoardContainer />\n      </IssueFormContainer>\n    </div>\n  </div>\n);\n\nexport default Main;\n","import ActionTypes, {\n  _SUCCESS_SUFIX,\n  _ERROR_SUFIX,\n} from '../constants/ActionTypes';\nimport * as RequestStatuses from '../constants/RequestStatuses';\n\nexport const initialState = {\n  issues: [],\n  requestStatus: RequestStatuses.SUCCESS,\n  requestError: null,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.GET_ISSUES:\n      return {\n        ...state,\n        requestStatus: RequestStatuses.PENDING,\n        requestError: null,\n      };\n\n    case `${ActionTypes.GET_ISSUES}${_SUCCESS_SUFIX}`:\n      return {\n        ...state,\n        issues: payload,\n        requestStatus: RequestStatuses.SUCCESS,\n        requestError: null,\n      };\n\n    case `${ActionTypes.GET_ISSUES}${_ERROR_SUFIX}`:\n      return {\n        ...state,\n        requestStatus: RequestStatuses.ERROR,\n        requestError: payload,\n      };\n\n    case ActionTypes.ADD_ISSUE:\n      return {\n        ...state,\n        issues: state.issues.filter(\n          (i) => (i._id !== payload._id),\n        ).concat([payload]),\n      };\n\n    case ActionTypes.UPDATE_ISSUE:\n      return {\n        ...state,\n        issues: state.issues.filter(\n          (i) => (i._id !== payload._id),\n        ).concat([payload]),\n        requestStatus: RequestStatuses.PENDING,\n        requestError: null,\n      };\n\n    case `${ActionTypes.UPDATE_ISSUE}${_SUCCESS_SUFIX}`:\n      return {\n        ...state,\n        requestStatus: RequestStatuses.SUCCESS,\n        requestError: null,\n      };\n\n    case `${ActionTypes.UPDATE_ISSUE}${_ERROR_SUFIX}`:\n      return {\n        ...state,\n        requestStatus: RequestStatuses.ERROR,\n        requestError: payload,\n      };\n\n    case ActionTypes.DELETE_ISSUE:\n      return {\n        ...state,\n        issues: state.issues.filter(\n          (i) => (i._id !== payload._id),\n        ),\n        requestStatus: RequestStatuses.PENDING,\n        requestError: null,\n      };\n\n    case `${ActionTypes.DELETE_ISSUE}${_SUCCESS_SUFIX}`:\n      return {\n        ...state,\n        requestStatus: RequestStatuses.SUCCESS,\n        requestError: null,\n      };\n\n    case `${ActionTypes.DELETE_ISSUE}${_ERROR_SUFIX}`:\n      return {\n        ...state,\n        requestStatus: RequestStatuses.ERROR,\n        requestError: payload,\n      };\n\n\n    default:\n      return state;\n  }\n};\n","import ActionTypes, {\n  _ERROR_SUFIX,\n  _SUCCESS_SUFIX,\n} from '../constants/ActionTypes';\nimport * as RequestStatuses from '../constants/RequestStatuses';\n\nexport const initialState = {\n  issue: {},\n  isValid: false,\n  requestStatus: RequestStatuses.SUCCESS,\n  requestError: null,\n  isOpen: false,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.SET_ISSUE_FORM_ELEMENT:\n      return {\n        ...state,\n        issue: {\n          ...state.issue,\n          ...payload,\n        },\n      };\n\n    case ActionTypes.SUMBIT_ISSUE_FORM:\n      return {\n        ...state,\n        requestStatus: RequestStatuses.PENDING,\n        requestError: null,\n      };\n\n    case `${ActionTypes.SUMBIT_ISSUE_FORM}${_SUCCESS_SUFIX}`:\n      return {\n        ...state,\n        requestStatus: RequestStatuses.SUCCESS,\n        issue: {},\n        requestError: null,\n      };\n\n    case `${ActionTypes.SUMBIT_ISSUE_FORM}${_ERROR_SUFIX}`:\n      return {\n        ...state,\n        requestStatus: RequestStatuses.ERROR,\n        requestError: payload,\n      };\n\n    case ActionTypes.TOGGLE_ISSUE_FORM:\n      return {\n        ...state,\n        isOpen: !state.isOpen,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport boardState, { initialState as boardInitialState } from './Board/boardReducer';\nimport issueFormState, { initialState as issueFormInitialState } from './IssueForm/issueFormReducer';\n\nconst initialState = {\n  boardState: boardInitialState,\n  issueFormState: issueFormInitialState,\n};\n\n\nexport default createStore(\n  combineReducers({ boardState, issueFormState }),\n  initialState,\n  applyMiddleware(thunk),\n);\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Main from './Main/Main';\nimport store from './store';\n\nReactDOM.render((\n  <Provider store={store}>\n    <Main />\n  </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}